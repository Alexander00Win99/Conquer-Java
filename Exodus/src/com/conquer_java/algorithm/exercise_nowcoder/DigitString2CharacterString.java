package com.conquer_java.algorithm.exercise_nowcoder;

/**
 * 题目描述
 * 给定一个字符串str，str全部由数字字符组成，如果str中的某一个或者相邻两个字符组成的子串值在1~26之间，则这个子串可以转换为一个字母。规定‘1’转换为“A”，“2”转换为“B”......"26"转化为“Z“。请求出str有多少种不同的转换结果，由于答案可能会比较大，所以请输出对10^{9}+7取模后的答案。
 * 输入描述:
 * 输出一行仅有’0‘~’9‘组成的字符串，代表str(0≤length(str)≤100000)。
 * 输出描述:
 * 输出一个整数，代表你所求出的取模后答案。
 * 示例1
 * 输入
 * 1111
 * 输出
 * 5
 * 说明
 * 能转换出来的结果有：“AAAAA”，“LAA”，“ALA”，“AAL”，“LL”。
 * 示例2
 * 输入
 * 01
 * 输出
 * 0
 * 说明
 * “0”没有对应的字符，而“01”是不可转换的。
 * 备注:
 * 时间复杂度O(n)O(n),空间复杂度O(1)O(1)
 */
public class DigitString2CharacterString {
}
