<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置aop：需要导入aop约束-->

    <!--注册bean-->
    <bean id="userService" class="com.conquer_java.spring.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.conquer_java.spring.log.BeforeLog"/>
    <bean id="afterLog" class="com.conquer_java.spring.log.AfterLog"/>

    <!--方式一：使用原生Spring API接口实现-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;切入点：execution(修饰符 返回值 类名 方法名 参数)参数指定执行位置&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.conquer_java.spring.service.UserServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash;执行环绕&ndash;&gt;-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

    <!--方式二：自定义切面类-->
<!--    <bean id="myAspect" class="com.conquer_java.spring.diy.MyAspect"/>-->
<!--    <aop:config>-->
<!--        <aop:aspect id="myAspect" ref="myAspect">-->
<!--            <aop:pointcut id="pointcut" expression="execution(* com.conquer_java.spring.service.UserServiceImpl.*(..))"/>-->
<!--            <aop:before method="before" pointcut-ref="pointcut"/>-->
<!--            <aop:after method="after" pointcut-ref="pointcut"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!--方式三：使用注解实现AOP-->
    <bean id="myAnnotationAspect" class="com.conquer_java.spring.anno.MyAnnotationAspect"/>
    <!--false：JDK动态代理，默认；true：CGLIB动态代理；-->
    <aop:aspectj-autoproxy proxy-target-class="false"/>
</beans>